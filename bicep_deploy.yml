#pipeline TP3

trigger:
  branches:
    include:
      - main  # Déclenche uniquement sur la branche principale

variables:
  serviceConnection : 'SC-TP3'
  resourceGroupName: 'TP3'
  location: 'canadacentral'
  templateFile: 'main.bicep'
  webAppName: 'webapp-tp3'
  webAppNameProd : 'webapp-tp3'
  sqlServerName : 'tp3-sql'
  sqlAdminLogin : 'tp3-admin'
  sqlAdminPassword : 'Nabu123400Coe!!@'
  storageName: 'storagetpcloud'
  
stages:
  - stage: Deploy_Dev
    displayName: Deploy to Dev Environment
    jobs:
      - deployment: DeployToDev
        displayName: Deploy Resources to Dev
        pool:
          vmImage: 'windows-latest'  # Utilise une machine virtuelle Windows
        environment: 'Dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(serviceConnection)  # Nom de votre service Azure connecté
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                        az --version
                        echo "System.DefaultWorkingDirectory = $(System.DefaultWorkingDirectory)"
                        az group create --name $(resourceGroupName) --location $(location)
                        az deployment group create --resource-group $(resourceGroupName) --template-file $(System.DefaultWorkingDirectory)/$(templateFile) --parameters location=$(location) sqlServerName=$(sqlServerName) sqlAdminLogin=$(sqlAdminLogin) sqlAdminPassword=$(sqlAdminPassword) storageName=$(storageName)

  - stage: Deploy_Production
    displayName: Deploy to Production Environment
    dependsOn: Deploy_Dev
    condition: succeeded()
    jobs:
      - deployment: DeployToProd
        displayName: Deploy Resources to Production
        pool:
          vmImage: 'windows-latest'  # Utilise une machine virtuelle Windows
        environment: 'Production'  # Environnement Azure Pipelines
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(serviceConnection)  # Nom de votre service Azure connecté
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                        echo "System.DefaultWorkingDirectory = $(System.DefaultWorkingDirectory)"
                        az group create --name $(resourceGroupName) --location $(location)
                        az deployment group create --resource-group $(resourceGroupName)  --template-file $(System.DefaultWorkingDirectory)\$(templateFile) --parameters location=$(location) sqlServerName=$(sqlServerName) sqlAdminLogin=$(sqlAdminLogin) sqlAdminPassword=$(sqlAdminPassword) storageName=$(storageName)










